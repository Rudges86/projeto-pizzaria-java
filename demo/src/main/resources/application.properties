#LOCALE para definir as configurações de local do spring como hora e data
spring.mvc.locale-resolver=fixed
spring.mvc.locale=pt_BR

# Instruções de conexão com o banco de dados MySQL, foi adicionado alguns parâmetros na url para as versões 5 e 6 do mysql
# Que é necessário para que a aplicação consiga se conectar com o mysql
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/pizzariajava?useSSL=false&allowPublicKeyRetrieveal=true&serverTimezone=America/Sao_Paulo
spring.datasource.username=root
spring.datasource.password=Rudges86@

#JPA
#Imprime (show_sql ) no log todas as operações com o banco de dados formatado (format_sql) com true se ficar com false fica em uma única linha
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
#Importante isso aqui no curso estava com update, mas ele não criava a tabela, quando foi trocado por create ele começou a criar a tabela.
spring.jpa.hibernate.ddl-auto=update

# application.properties
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false


#Springdoc-openapi 3.1 & Swagger 3 site https://springdoc.org/#migrating-from-springfox

#Url de acesso a documentação, abrindo a documentação localhost:8080/docs-park.html
springdoc.swagger-ui.path=/pizzaria.html

#Abre o código gerado pela openapi
sprindoc.api-docs.path=/pizzaria 

#Aqui vamos colocar os pactoes onde estão as classes do nosso controler para a documentação
springdoc.packagesToScan=com.example.pizzaria.web.controller 



#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

#server.error.include-stacktrace=never